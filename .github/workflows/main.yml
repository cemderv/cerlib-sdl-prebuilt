name: CMake Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux-gcc13:
    strategy:
      matrix:
        config: [ Debug, Release ]
    runs-on: ubuntu-22.04
    container: gcc:13
    steps:
      - uses: actions/checkout@v4
      - name: Install prerequisites
        run: |
          apt update -y
          apt upgrade -y
          apt install -y cmake libwayland-dev libxkbcommon-dev wayland-protocols xorg-dev libasound2-dev

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build \
          -DCMAKE_BUILD_TYPE=${{matrix.config}} \
      
      - name: DL
        uses: actions/download-artifact@v4
        with:
          name: dlb
          path: ${{github.workspace}}/build

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.config}}

  build-linux-clang16:
    strategy:
      matrix:
        config: [ Debug, Release ]
    runs-on: ubuntu-22.04
    container: gcc:13
    steps:
      - uses: actions/checkout@v4
      - name: Install prerequisites
        run: |
          apt update -y
          apt upgrade -y
          apt install -y cmake libwayland-dev libxkbcommon-dev wayland-protocols \
          xorg-dev libasound2-dev lsb-release wget software-properties-common gnupg

      - name: Install Clang
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x ./llvm.sh
          ./llvm.sh 16 all

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build \
          -DCMAKE_BUILD_TYPE=${{matrix.config}} \
          -DCMAKE_C_COMPILER=clang-16 \
          -DCMAKE_CXX_COMPILER=clang++-16

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.config}}

  build-windows-vs2022:
    strategy:
      matrix:
        config: [ Debug, Release ]
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.config}}

  build-macos:
    strategy:
      matrix:
        os: [ 13, 14 ]
        config: [ Debug, Release ]
    runs-on: macos-${{matrix.os}}
    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake (Xcode)
        run: |
          cmake -B ${{github.workspace}}/build -G Xcode -DCMAKE_BUILD_TYPE=${{matrix.config}}

      - name: Build (Xcode)
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.config}}
